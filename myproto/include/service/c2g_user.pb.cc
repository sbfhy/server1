// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/c2g_user.proto

#include "service/c2g_user.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace CMD {
class C2G_UserLoginArgDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2G_UserLoginArg> _instance;
} _C2G_UserLoginArg_default_instance_;
class C2G_UserLoginResDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<C2G_UserLoginRes> _instance;
} _C2G_UserLoginRes_default_instance_;
}  // namespace CMD
static void InitDefaultsscc_info_C2G_UserLoginArg_service_2fc2g_5fuser_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CMD::_C2G_UserLoginArg_default_instance_;
    new (ptr) ::CMD::C2G_UserLoginArg();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2G_UserLoginArg_service_2fc2g_5fuser_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2G_UserLoginArg_service_2fc2g_5fuser_2eproto}, {}};

static void InitDefaultsscc_info_C2G_UserLoginRes_service_2fc2g_5fuser_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::CMD::_C2G_UserLoginRes_default_instance_;
    new (ptr) ::CMD::C2G_UserLoginRes();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_C2G_UserLoginRes_service_2fc2g_5fuser_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_C2G_UserLoginRes_service_2fc2g_5fuser_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_service_2fc2g_5fuser_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_service_2fc2g_5fuser_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_service_2fc2g_5fuser_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_service_2fc2g_5fuser_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMD::C2G_UserLoginArg, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMD::C2G_UserLoginArg, accid_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::CMD::C2G_UserLoginRes, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::CMD::C2G_UserLoginRes, allow_login_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::CMD::C2G_UserLoginArg)},
  { 6, -1, sizeof(::CMD::C2G_UserLoginRes)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::CMD::_C2G_UserLoginArg_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::CMD::_C2G_UserLoginRes_default_instance_),
};

const char descriptor_table_protodef_service_2fc2g_5fuser_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\026service/c2g_user.proto\022\003CMD\032\035service/s"
  "ervice_include.proto\"!\n\020C2G_UserLoginArg"
  "\022\r\n\005accid\030\001 \001(\004\"\'\n\020C2G_UserLoginRes\022\023\n\013a"
  "llow_login\030\001 \001(\0102U\n\024C2G_UserLoginService"
  "\022=\n\rC2G_UserLogin\022\025.CMD.C2G_UserLoginArg"
  "\032\025.CMD.C2G_UserLoginResb\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_service_2fc2g_5fuser_2eproto_deps[1] = {
  &::descriptor_table_service_2fservice_5finclude_2eproto,
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_service_2fc2g_5fuser_2eproto_sccs[2] = {
  &scc_info_C2G_UserLoginArg_service_2fc2g_5fuser_2eproto.base,
  &scc_info_C2G_UserLoginRes_service_2fc2g_5fuser_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_service_2fc2g_5fuser_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_service_2fc2g_5fuser_2eproto = {
  false, false, descriptor_table_protodef_service_2fc2g_5fuser_2eproto, "service/c2g_user.proto", 231,
  &descriptor_table_service_2fc2g_5fuser_2eproto_once, descriptor_table_service_2fc2g_5fuser_2eproto_sccs, descriptor_table_service_2fc2g_5fuser_2eproto_deps, 2, 1,
  schemas, file_default_instances, TableStruct_service_2fc2g_5fuser_2eproto::offsets,
  file_level_metadata_service_2fc2g_5fuser_2eproto, 2, file_level_enum_descriptors_service_2fc2g_5fuser_2eproto, file_level_service_descriptors_service_2fc2g_5fuser_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_service_2fc2g_5fuser_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_service_2fc2g_5fuser_2eproto)), true);
namespace CMD {

// ===================================================================

class C2G_UserLoginArg::_Internal {
 public:
};

C2G_UserLoginArg::C2G_UserLoginArg(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMD.C2G_UserLoginArg)
}
C2G_UserLoginArg::C2G_UserLoginArg(const C2G_UserLoginArg& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  accid_ = from.accid_;
  // @@protoc_insertion_point(copy_constructor:CMD.C2G_UserLoginArg)
}

void C2G_UserLoginArg::SharedCtor() {
  accid_ = PROTOBUF_ULONGLONG(0);
}

C2G_UserLoginArg::~C2G_UserLoginArg() {
  // @@protoc_insertion_point(destructor:CMD.C2G_UserLoginArg)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void C2G_UserLoginArg::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void C2G_UserLoginArg::ArenaDtor(void* object) {
  C2G_UserLoginArg* _this = reinterpret_cast< C2G_UserLoginArg* >(object);
  (void)_this;
}
void C2G_UserLoginArg::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C2G_UserLoginArg::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2G_UserLoginArg& C2G_UserLoginArg::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2G_UserLoginArg_service_2fc2g_5fuser_2eproto.base);
  return *internal_default_instance();
}


void C2G_UserLoginArg::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD.C2G_UserLoginArg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  accid_ = PROTOBUF_ULONGLONG(0);
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2G_UserLoginArg::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // uint64 accid = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          accid_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2G_UserLoginArg::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMD.C2G_UserLoginArg)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // uint64 accid = 1;
  if (this->accid() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt64ToArray(1, this->_internal_accid(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMD.C2G_UserLoginArg)
  return target;
}

size_t C2G_UserLoginArg::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD.C2G_UserLoginArg)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // uint64 accid = 1;
  if (this->accid() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt64Size(
        this->_internal_accid());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2G_UserLoginArg::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD.C2G_UserLoginArg)
  GOOGLE_DCHECK_NE(&from, this);
  const C2G_UserLoginArg* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2G_UserLoginArg>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD.C2G_UserLoginArg)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD.C2G_UserLoginArg)
    MergeFrom(*source);
  }
}

void C2G_UserLoginArg::MergeFrom(const C2G_UserLoginArg& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD.C2G_UserLoginArg)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.accid() != 0) {
    _internal_set_accid(from._internal_accid());
  }
}

void C2G_UserLoginArg::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD.C2G_UserLoginArg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2G_UserLoginArg::CopyFrom(const C2G_UserLoginArg& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD.C2G_UserLoginArg)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2G_UserLoginArg::IsInitialized() const {
  return true;
}

void C2G_UserLoginArg::InternalSwap(C2G_UserLoginArg* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(accid_, other->accid_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2G_UserLoginArg::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

class C2G_UserLoginRes::_Internal {
 public:
};

C2G_UserLoginRes::C2G_UserLoginRes(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:CMD.C2G_UserLoginRes)
}
C2G_UserLoginRes::C2G_UserLoginRes(const C2G_UserLoginRes& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  allow_login_ = from.allow_login_;
  // @@protoc_insertion_point(copy_constructor:CMD.C2G_UserLoginRes)
}

void C2G_UserLoginRes::SharedCtor() {
  allow_login_ = false;
}

C2G_UserLoginRes::~C2G_UserLoginRes() {
  // @@protoc_insertion_point(destructor:CMD.C2G_UserLoginRes)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void C2G_UserLoginRes::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void C2G_UserLoginRes::ArenaDtor(void* object) {
  C2G_UserLoginRes* _this = reinterpret_cast< C2G_UserLoginRes* >(object);
  (void)_this;
}
void C2G_UserLoginRes::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void C2G_UserLoginRes::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const C2G_UserLoginRes& C2G_UserLoginRes::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_C2G_UserLoginRes_service_2fc2g_5fuser_2eproto.base);
  return *internal_default_instance();
}


void C2G_UserLoginRes::Clear() {
// @@protoc_insertion_point(message_clear_start:CMD.C2G_UserLoginRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  allow_login_ = false;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* C2G_UserLoginRes::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // bool allow_login = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          allow_login_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* C2G_UserLoginRes::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:CMD.C2G_UserLoginRes)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // bool allow_login = 1;
  if (this->allow_login() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(1, this->_internal_allow_login(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:CMD.C2G_UserLoginRes)
  return target;
}

size_t C2G_UserLoginRes::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:CMD.C2G_UserLoginRes)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // bool allow_login = 1;
  if (this->allow_login() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void C2G_UserLoginRes::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:CMD.C2G_UserLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  const C2G_UserLoginRes* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<C2G_UserLoginRes>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:CMD.C2G_UserLoginRes)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:CMD.C2G_UserLoginRes)
    MergeFrom(*source);
  }
}

void C2G_UserLoginRes::MergeFrom(const C2G_UserLoginRes& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:CMD.C2G_UserLoginRes)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.allow_login() != 0) {
    _internal_set_allow_login(from._internal_allow_login());
  }
}

void C2G_UserLoginRes::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:CMD.C2G_UserLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void C2G_UserLoginRes::CopyFrom(const C2G_UserLoginRes& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:CMD.C2G_UserLoginRes)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool C2G_UserLoginRes::IsInitialized() const {
  return true;
}

void C2G_UserLoginRes::InternalSwap(C2G_UserLoginRes* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(allow_login_, other->allow_login_);
}

::PROTOBUF_NAMESPACE_ID::Metadata C2G_UserLoginRes::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

C2G_UserLoginService::~C2G_UserLoginService() {}

static const ::google::protobuf::ServiceDescriptor* C2G_UserLoginService_descriptor_ = NULL;

const ::google::protobuf::ServiceDescriptor* C2G_UserLoginService::descriptor() {
  // protobuf_AssignDescriptorsOnce();
  if (C2G_UserLoginService_descriptor_ == NULL)
    C2G_UserLoginService_descriptor_ = ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
        "service/c2g_user.proto")->service(0);
  return C2G_UserLoginService_descriptor_;
}

const ::google::protobuf::ServiceDescriptor* C2G_UserLoginService::GetDescriptor() {
  return descriptor();
}

void C2G_UserLoginService::C2G_UserLogin(const ::CMD::C2G_UserLoginArgPtr&,
                         const ::CMD::C2G_UserLoginResPtr&) {
  assert(0);
}

void C2G_UserLoginService::CallMethod(const ::google::protobuf::MethodDescriptor* method,
                             const ::google::protobuf::MessagePtr& request,
                             const ::google::protobuf::MessagePtr& response) {
  GOOGLE_DCHECK_EQ(method->service(), C2G_UserLoginService_descriptor_);
  switch(method->index()) {
    case 0:
      C2G_UserLogin(::google::protobuf::down_pointer_cast<::CMD::C2G_UserLoginArg>(request),
             ::google::protobuf::down_pointer_cast<::CMD::C2G_UserLoginRes>(response));
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

void C2G_UserLoginService::DoneCallback(const ::google::protobuf::MethodDescriptor* method,
                               const ::google::protobuf::MessagePtr& request,
                               const ::google::protobuf::MessagePtr& response) {
  GOOGLE_DCHECK_EQ(method->service(), C2G_UserLoginService_descriptor_);
  switch(method->index()) {
    case 0:
      C2G_UserLogin_DoneCb(::google::protobuf::down_pointer_cast<::CMD::C2G_UserLoginArg>(request),
                    ::google::protobuf::down_pointer_cast<::CMD::C2G_UserLoginRes>(response));
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

void C2G_UserLoginService::TimeOut(const ::google::protobuf::MethodDescriptor* method,
                          const ::google::protobuf::MessagePtr& request) {
  GOOGLE_DCHECK_EQ(method->service(), C2G_UserLoginService_descriptor_);
  switch(method->index()) {
    case 0:
      C2G_UserLogin_TimeOut(::google::protobuf::down_pointer_cast<::CMD::C2G_UserLoginArg>(request));
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

void C2G_UserLoginService::DelayResponse(const ::google::protobuf::MethodDescriptor* method,
                                const ::google::protobuf::MessagePtr& request,
                                const ::google::protobuf::MessagePtr& response) {
  GOOGLE_DCHECK_EQ(method->service(), C2G_UserLoginService_descriptor_);
  switch(method->index()) {
    case 0:
      C2G_UserLogin_DelayResponse(::google::protobuf::down_pointer_cast<::CMD::C2G_UserLoginArg>(request),
                           ::google::protobuf::down_pointer_cast<::CMD::C2G_UserLoginRes>(response));
      break;
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      break;
  }
}

const ::google::protobuf::Message& C2G_UserLoginService::GetRequestPrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CMD::C2G_UserLoginArg::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

const ::google::protobuf::Message& C2G_UserLoginService::GetResponsePrototype(
    const ::google::protobuf::MethodDescriptor* method) const {
  GOOGLE_DCHECK_EQ(method->service(), descriptor());
  switch(method->index()) {
    case 0:
      return ::CMD::C2G_UserLoginRes::default_instance();
    default:
      GOOGLE_LOG(FATAL) << "Bad method index; this should never happen.";
      return *reinterpret_cast< ::google::protobuf::Message*>(NULL);
  }
}

C2G_UserLoginService_Stub::C2G_UserLoginService_Stub(::muduo::net::RpcChannelBase* channel__)
    : channel_(channel__), owns_channel_(false) 
{
}

C2G_UserLoginService_Stub::~C2G_UserLoginService_Stub() 
{
}

void C2G_UserLoginService_Stub::C2G_UserLogin(const ::CMD::C2G_UserLoginArgPtr& request,
                              const ::CMD::C2G_UserLoginResPtr& response) 
{
  channel_->CallMethod(descriptor()->method(0),
                       request, 
                       response);
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace CMD
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::CMD::C2G_UserLoginArg* Arena::CreateMaybeMessage< ::CMD::C2G_UserLoginArg >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMD::C2G_UserLoginArg >(arena);
}
template<> PROTOBUF_NOINLINE ::CMD::C2G_UserLoginRes* Arena::CreateMaybeMessage< ::CMD::C2G_UserLoginRes >(Arena* arena) {
  return Arena::CreateMessageInternal< ::CMD::C2G_UserLoginRes >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
