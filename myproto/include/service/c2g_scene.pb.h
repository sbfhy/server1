// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/c2g_scene.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_service_2fc2g_5fscene_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_service_2fc2g_5fscene_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "service.h"
#include <memory>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_service_2fc2g_5fscene_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_service_2fc2g_5fscene_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[4]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_service_2fc2g_5fscene_2eproto;
namespace CMD {
class C2G_CreateEntryArg;
class C2G_CreateEntryArgDefaultTypeInternal;
extern C2G_CreateEntryArgDefaultTypeInternal _C2G_CreateEntryArg_default_instance_;
class C2G_CreateEntryRes;
class C2G_CreateEntryResDefaultTypeInternal;
extern C2G_CreateEntryResDefaultTypeInternal _C2G_CreateEntryRes_default_instance_;
class C2G_EnterSceneArg;
class C2G_EnterSceneArgDefaultTypeInternal;
extern C2G_EnterSceneArgDefaultTypeInternal _C2G_EnterSceneArg_default_instance_;
class C2G_EnterSceneRes;
class C2G_EnterSceneResDefaultTypeInternal;
extern C2G_EnterSceneResDefaultTypeInternal _C2G_EnterSceneRes_default_instance_;
}  // namespace CMD
PROTOBUF_NAMESPACE_OPEN
template<> ::CMD::C2G_CreateEntryArg* Arena::CreateMaybeMessage<::CMD::C2G_CreateEntryArg>(Arena*);
template<> ::CMD::C2G_CreateEntryRes* Arena::CreateMaybeMessage<::CMD::C2G_CreateEntryRes>(Arena*);
template<> ::CMD::C2G_EnterSceneArg* Arena::CreateMaybeMessage<::CMD::C2G_EnterSceneArg>(Arena*);
template<> ::CMD::C2G_EnterSceneRes* Arena::CreateMaybeMessage<::CMD::C2G_EnterSceneRes>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace CMD {

// ===================================================================

class C2G_CreateEntryArg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD.C2G_CreateEntryArg) */ {
 public:
  inline C2G_CreateEntryArg() : C2G_CreateEntryArg(nullptr) {}
  virtual ~C2G_CreateEntryArg();

  C2G_CreateEntryArg(const C2G_CreateEntryArg& from);
  C2G_CreateEntryArg(C2G_CreateEntryArg&& from) noexcept
    : C2G_CreateEntryArg() {
    *this = ::std::move(from);
  }

  inline C2G_CreateEntryArg& operator=(const C2G_CreateEntryArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2G_CreateEntryArg& operator=(C2G_CreateEntryArg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C2G_CreateEntryArg& default_instance();

  static inline const C2G_CreateEntryArg* internal_default_instance() {
    return reinterpret_cast<const C2G_CreateEntryArg*>(
               &_C2G_CreateEntryArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(C2G_CreateEntryArg& a, C2G_CreateEntryArg& b) {
    a.Swap(&b);
  }
  inline void Swap(C2G_CreateEntryArg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2G_CreateEntryArg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C2G_CreateEntryArg* New() const final {
    return CreateMaybeMessage<C2G_CreateEntryArg>(nullptr);
  }

  C2G_CreateEntryArg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C2G_CreateEntryArg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C2G_CreateEntryArg& from);
  void MergeFrom(const C2G_CreateEntryArg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C2G_CreateEntryArg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD.C2G_CreateEntryArg";
  }
  protected:
  explicit C2G_CreateEntryArg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_service_2fc2g_5fscene_2eproto);
    return ::descriptor_table_service_2fc2g_5fscene_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMD.C2G_CreateEntryArg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_service_2fc2g_5fscene_2eproto;
};
// -------------------------------------------------------------------

class C2G_CreateEntryRes PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD.C2G_CreateEntryRes) */ {
 public:
  inline C2G_CreateEntryRes() : C2G_CreateEntryRes(nullptr) {}
  virtual ~C2G_CreateEntryRes();

  C2G_CreateEntryRes(const C2G_CreateEntryRes& from);
  C2G_CreateEntryRes(C2G_CreateEntryRes&& from) noexcept
    : C2G_CreateEntryRes() {
    *this = ::std::move(from);
  }

  inline C2G_CreateEntryRes& operator=(const C2G_CreateEntryRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2G_CreateEntryRes& operator=(C2G_CreateEntryRes&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C2G_CreateEntryRes& default_instance();

  static inline const C2G_CreateEntryRes* internal_default_instance() {
    return reinterpret_cast<const C2G_CreateEntryRes*>(
               &_C2G_CreateEntryRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(C2G_CreateEntryRes& a, C2G_CreateEntryRes& b) {
    a.Swap(&b);
  }
  inline void Swap(C2G_CreateEntryRes* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2G_CreateEntryRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C2G_CreateEntryRes* New() const final {
    return CreateMaybeMessage<C2G_CreateEntryRes>(nullptr);
  }

  C2G_CreateEntryRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C2G_CreateEntryRes>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C2G_CreateEntryRes& from);
  void MergeFrom(const C2G_CreateEntryRes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C2G_CreateEntryRes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD.C2G_CreateEntryRes";
  }
  protected:
  explicit C2G_CreateEntryRes(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_service_2fc2g_5fscene_2eproto);
    return ::descriptor_table_service_2fc2g_5fscene_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMD.C2G_CreateEntryRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_service_2fc2g_5fscene_2eproto;
};
// -------------------------------------------------------------------

class C2G_EnterSceneArg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD.C2G_EnterSceneArg) */ {
 public:
  inline C2G_EnterSceneArg() : C2G_EnterSceneArg(nullptr) {}
  virtual ~C2G_EnterSceneArg();

  C2G_EnterSceneArg(const C2G_EnterSceneArg& from);
  C2G_EnterSceneArg(C2G_EnterSceneArg&& from) noexcept
    : C2G_EnterSceneArg() {
    *this = ::std::move(from);
  }

  inline C2G_EnterSceneArg& operator=(const C2G_EnterSceneArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2G_EnterSceneArg& operator=(C2G_EnterSceneArg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C2G_EnterSceneArg& default_instance();

  static inline const C2G_EnterSceneArg* internal_default_instance() {
    return reinterpret_cast<const C2G_EnterSceneArg*>(
               &_C2G_EnterSceneArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  friend void swap(C2G_EnterSceneArg& a, C2G_EnterSceneArg& b) {
    a.Swap(&b);
  }
  inline void Swap(C2G_EnterSceneArg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2G_EnterSceneArg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C2G_EnterSceneArg* New() const final {
    return CreateMaybeMessage<C2G_EnterSceneArg>(nullptr);
  }

  C2G_EnterSceneArg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C2G_EnterSceneArg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C2G_EnterSceneArg& from);
  void MergeFrom(const C2G_EnterSceneArg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C2G_EnterSceneArg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD.C2G_EnterSceneArg";
  }
  protected:
  explicit C2G_EnterSceneArg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_service_2fc2g_5fscene_2eproto);
    return ::descriptor_table_service_2fc2g_5fscene_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMD.C2G_EnterSceneArg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_service_2fc2g_5fscene_2eproto;
};
// -------------------------------------------------------------------

class C2G_EnterSceneRes PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD.C2G_EnterSceneRes) */ {
 public:
  inline C2G_EnterSceneRes() : C2G_EnterSceneRes(nullptr) {}
  virtual ~C2G_EnterSceneRes();

  C2G_EnterSceneRes(const C2G_EnterSceneRes& from);
  C2G_EnterSceneRes(C2G_EnterSceneRes&& from) noexcept
    : C2G_EnterSceneRes() {
    *this = ::std::move(from);
  }

  inline C2G_EnterSceneRes& operator=(const C2G_EnterSceneRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2G_EnterSceneRes& operator=(C2G_EnterSceneRes&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C2G_EnterSceneRes& default_instance();

  static inline const C2G_EnterSceneRes* internal_default_instance() {
    return reinterpret_cast<const C2G_EnterSceneRes*>(
               &_C2G_EnterSceneRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  friend void swap(C2G_EnterSceneRes& a, C2G_EnterSceneRes& b) {
    a.Swap(&b);
  }
  inline void Swap(C2G_EnterSceneRes* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2G_EnterSceneRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C2G_EnterSceneRes* New() const final {
    return CreateMaybeMessage<C2G_EnterSceneRes>(nullptr);
  }

  C2G_EnterSceneRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C2G_EnterSceneRes>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C2G_EnterSceneRes& from);
  void MergeFrom(const C2G_EnterSceneRes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C2G_EnterSceneRes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD.C2G_EnterSceneRes";
  }
  protected:
  explicit C2G_EnterSceneRes(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_service_2fc2g_5fscene_2eproto);
    return ::descriptor_table_service_2fc2g_5fscene_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMD.C2G_EnterSceneRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_service_2fc2g_5fscene_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// C2G_CreateEntryArg

// -------------------------------------------------------------------

// C2G_CreateEntryRes

// -------------------------------------------------------------------

// C2G_EnterSceneArg

// -------------------------------------------------------------------

// C2G_EnterSceneRes

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------



// ===================================================================

typedef     ::std::shared_ptr<C2G_CreateEntryArg>     C2G_CreateEntryArgPtr;
typedef     ::std::shared_ptr<C2G_CreateEntryRes>     C2G_CreateEntryResPtr;
typedef     ::std::shared_ptr<C2G_EnterSceneArg>     C2G_EnterSceneArgPtr;
typedef     ::std::shared_ptr<C2G_EnterSceneRes>     C2G_EnterSceneResPtr;

// -------------------------------------------------------------------

class C2G_SceneEntryService_Stub;

class C2G_SceneEntryService : public ::muduo::net::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline C2G_SceneEntryService() {};
 public:
  virtual ~C2G_SceneEntryService();

  typedef C2G_SceneEntryService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void C2G_CreateEntry(const ::CMD::C2G_CreateEntryArgPtr& request,
                       const ::CMD::C2G_CreateEntryResPtr& response);
  virtual void C2G_CreateEntry_DoneCb(const ::CMD::C2G_CreateEntryArgPtr& request,
                              const ::CMD::C2G_CreateEntryResPtr& response) {} 
  virtual void C2G_CreateEntry_TimeOut(const ::CMD::C2G_CreateEntryArgPtr& request) {} 

  virtual void C2G_EnterScene(const ::CMD::C2G_EnterSceneArgPtr& request,
                       const ::CMD::C2G_EnterSceneResPtr& response);
  virtual void C2G_EnterScene_DoneCb(const ::CMD::C2G_EnterSceneArgPtr& request,
                              const ::CMD::C2G_EnterSceneResPtr& response) {} 
  virtual void C2G_EnterScene_TimeOut(const ::CMD::C2G_EnterSceneArgPtr& request) {} 


  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  const ::google::protobuf::Message& GetRequestPrototype(
                             const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
                             const ::google::protobuf::MethodDescriptor* method) const;

  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  const ::google::protobuf::MessagePtr& request,
                  const ::google::protobuf::MessagePtr& response);

  void DoneCallback(const ::google::protobuf::MethodDescriptor* method,
                    const ::google::protobuf::MessagePtr& request,
                    const ::google::protobuf::MessagePtr& response);

  void TimeOut(const ::google::protobuf::MethodDescriptor* method,
               const ::google::protobuf::MessagePtr& request);

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(C2G_SceneEntryService);
};

class C2G_SceneEntryService_Stub : public C2G_SceneEntryService {
 public:
  C2G_SceneEntryService_Stub() {} 
  C2G_SceneEntryService_Stub(::muduo::net::RpcChannelBase* channel);
  ~C2G_SceneEntryService_Stub();

  inline ::muduo::net::RpcChannelBase* channel() { return channel_; }

  // implements C2G_SceneEntryService ------------------------------------------

  virtual void C2G_CreateEntry(const ::CMD::C2G_CreateEntryArgPtr& request,
                       const ::CMD::C2G_CreateEntryResPtr& response);
  virtual void C2G_EnterScene(const ::CMD::C2G_EnterSceneArgPtr& request,
                       const ::CMD::C2G_EnterSceneResPtr& response);

 private:
  muduo::net::RpcChannelBase* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(C2G_SceneEntryService_Stub);
};

// @@protoc_insertion_point(namespace_scope)

}  // namespace CMD

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_service_2fc2g_5fscene_2eproto
