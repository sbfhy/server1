// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/g2c_scene.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_service_2fg2c_5fscene_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_service_2fg2c_5fscene_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "service.h"
#include <memory>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_service_2fg2c_5fscene_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_service_2fg2c_5fscene_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_service_2fg2c_5fscene_2eproto;
namespace CMD {
class G2C_EnterSceneArg;
class G2C_EnterSceneArgDefaultTypeInternal;
extern G2C_EnterSceneArgDefaultTypeInternal _G2C_EnterSceneArg_default_instance_;
class G2C_EnterSceneRes;
class G2C_EnterSceneResDefaultTypeInternal;
extern G2C_EnterSceneResDefaultTypeInternal _G2C_EnterSceneRes_default_instance_;
}  // namespace CMD
PROTOBUF_NAMESPACE_OPEN
template<> ::CMD::G2C_EnterSceneArg* Arena::CreateMaybeMessage<::CMD::G2C_EnterSceneArg>(Arena*);
template<> ::CMD::G2C_EnterSceneRes* Arena::CreateMaybeMessage<::CMD::G2C_EnterSceneRes>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace CMD {

// ===================================================================

class G2C_EnterSceneArg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD.G2C_EnterSceneArg) */ {
 public:
  inline G2C_EnterSceneArg() : G2C_EnterSceneArg(nullptr) {}
  virtual ~G2C_EnterSceneArg();

  G2C_EnterSceneArg(const G2C_EnterSceneArg& from);
  G2C_EnterSceneArg(G2C_EnterSceneArg&& from) noexcept
    : G2C_EnterSceneArg() {
    *this = ::std::move(from);
  }

  inline G2C_EnterSceneArg& operator=(const G2C_EnterSceneArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline G2C_EnterSceneArg& operator=(G2C_EnterSceneArg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const G2C_EnterSceneArg& default_instance();

  static inline const G2C_EnterSceneArg* internal_default_instance() {
    return reinterpret_cast<const G2C_EnterSceneArg*>(
               &_G2C_EnterSceneArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(G2C_EnterSceneArg& a, G2C_EnterSceneArg& b) {
    a.Swap(&b);
  }
  inline void Swap(G2C_EnterSceneArg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(G2C_EnterSceneArg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline G2C_EnterSceneArg* New() const final {
    return CreateMaybeMessage<G2C_EnterSceneArg>(nullptr);
  }

  G2C_EnterSceneArg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<G2C_EnterSceneArg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const G2C_EnterSceneArg& from);
  void MergeFrom(const G2C_EnterSceneArg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(G2C_EnterSceneArg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD.G2C_EnterSceneArg";
  }
  protected:
  explicit G2C_EnterSceneArg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_service_2fg2c_5fscene_2eproto);
    return ::descriptor_table_service_2fg2c_5fscene_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMD.G2C_EnterSceneArg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_service_2fg2c_5fscene_2eproto;
};
// -------------------------------------------------------------------

class G2C_EnterSceneRes PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD.G2C_EnterSceneRes) */ {
 public:
  inline G2C_EnterSceneRes() : G2C_EnterSceneRes(nullptr) {}
  virtual ~G2C_EnterSceneRes();

  G2C_EnterSceneRes(const G2C_EnterSceneRes& from);
  G2C_EnterSceneRes(G2C_EnterSceneRes&& from) noexcept
    : G2C_EnterSceneRes() {
    *this = ::std::move(from);
  }

  inline G2C_EnterSceneRes& operator=(const G2C_EnterSceneRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline G2C_EnterSceneRes& operator=(G2C_EnterSceneRes&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const G2C_EnterSceneRes& default_instance();

  static inline const G2C_EnterSceneRes* internal_default_instance() {
    return reinterpret_cast<const G2C_EnterSceneRes*>(
               &_G2C_EnterSceneRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(G2C_EnterSceneRes& a, G2C_EnterSceneRes& b) {
    a.Swap(&b);
  }
  inline void Swap(G2C_EnterSceneRes* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(G2C_EnterSceneRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline G2C_EnterSceneRes* New() const final {
    return CreateMaybeMessage<G2C_EnterSceneRes>(nullptr);
  }

  G2C_EnterSceneRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<G2C_EnterSceneRes>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const G2C_EnterSceneRes& from);
  void MergeFrom(const G2C_EnterSceneRes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(G2C_EnterSceneRes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD.G2C_EnterSceneRes";
  }
  protected:
  explicit G2C_EnterSceneRes(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_service_2fg2c_5fscene_2eproto);
    return ::descriptor_table_service_2fg2c_5fscene_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:CMD.G2C_EnterSceneRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_service_2fg2c_5fscene_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// G2C_EnterSceneArg

// -------------------------------------------------------------------

// G2C_EnterSceneRes

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------



// ===================================================================

typedef     ::std::shared_ptr<G2C_EnterSceneArg>     G2C_EnterSceneArgPtr;
typedef     ::std::shared_ptr<G2C_EnterSceneRes>     G2C_EnterSceneResPtr;

// -------------------------------------------------------------------

class G2C_SceneService_Stub;

class G2C_SceneService : public ::muduo::net::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline G2C_SceneService() {};
 public:
  virtual ~G2C_SceneService();

  typedef G2C_SceneService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void G2C_EnterScene(const ::CMD::G2C_EnterSceneArgPtr& request,
                       const ::CMD::G2C_EnterSceneResPtr& response);
  virtual void G2C_EnterScene_DoneCb(const ::CMD::G2C_EnterSceneArgPtr& request,
                              const ::CMD::G2C_EnterSceneResPtr& response) {} 
  virtual void G2C_EnterScene_TimeOut(const ::CMD::G2C_EnterSceneArgPtr& request) {} 


  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  const ::google::protobuf::Message& GetRequestPrototype(
                             const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
                             const ::google::protobuf::MethodDescriptor* method) const;

  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  const ::google::protobuf::MessagePtr& request,
                  const ::google::protobuf::MessagePtr& response);

  void DoneCallback(const ::google::protobuf::MethodDescriptor* method,
                    const ::google::protobuf::MessagePtr& request,
                    const ::google::protobuf::MessagePtr& response);

  void TimeOut(const ::google::protobuf::MethodDescriptor* method,
               const ::google::protobuf::MessagePtr& request);

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(G2C_SceneService);
};

class G2C_SceneService_Stub : public G2C_SceneService {
 public:
  G2C_SceneService_Stub() {} 
  G2C_SceneService_Stub(::muduo::net::RpcChannelBase* channel);
  ~G2C_SceneService_Stub();

  inline ::muduo::net::RpcChannelBase* channel() { return channel_; }

  // implements G2C_SceneService ------------------------------------------

  virtual void G2C_EnterScene(const ::CMD::G2C_EnterSceneArgPtr& request,
                       const ::CMD::G2C_EnterSceneResPtr& response);

 private:
  muduo::net::RpcChannelBase* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(G2C_SceneService_Stub);
};

// @@protoc_insertion_point(namespace_scope)

}  // namespace CMD

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_service_2fg2c_5fscene_2eproto
