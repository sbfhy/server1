// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/service_enum.proto

#include "service/service_enum.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace ENUM {
}  // namespace ENUM
static constexpr ::PROTOBUF_NAMESPACE_ID::Metadata* file_level_metadata_service_2fservice_5fenum_2eproto = nullptr;
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_service_2fservice_5fenum_2eproto[1];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_service_2fservice_5fenum_2eproto = nullptr;
const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_service_2fservice_5fenum_2eproto::offsets[1] = {};
static constexpr ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema* schemas = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::Message* const* file_default_instances = nullptr;

const char descriptor_table_protodef_service_2fservice_5fenum_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\032service/service_enum.proto\022\004ENUM*\304\002\n\014E"
  "ServiceType\022\023\n\017SERVICETYPE_MIN\020\000\022\013\n\007C2G_"
  "MIN\020\001\022\030\n\024C2G_UserLoginService\020\002\022\035\n\031C2G_U"
  "serLoginService_Stub\020\003\022\031\n\025C2G_SceneEntry"
  "Service\020\004\022\036\n\032C2G_SceneEntryService_Stub\020"
  "\005\022\014\n\007C2G_MAX\020\360\001\022\014\n\007G2C_MIN\020\361\001\022\025\n\020G2C_Sce"
  "neService\020\362\001\022\032\n\025G2C_SceneService_Stub\020\363\001"
  "\022\014\n\007G2C_MAX\020\340\003\022\022\n\rSudokuService\020\365\003\022\027\n\022Su"
  "dokuService_Stub\020\366\003\022\024\n\017SERVICETYPE_MAX\020\200"
  "\010b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_service_2fservice_5fenum_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_service_2fservice_5fenum_2eproto_sccs[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_service_2fservice_5fenum_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_service_2fservice_5fenum_2eproto = {
  false, false, descriptor_table_protodef_service_2fservice_5fenum_2eproto, "service/service_enum.proto", 369,
  &descriptor_table_service_2fservice_5fenum_2eproto_once, descriptor_table_service_2fservice_5fenum_2eproto_sccs, descriptor_table_service_2fservice_5fenum_2eproto_deps, 0, 0,
  schemas, file_default_instances, TableStruct_service_2fservice_5fenum_2eproto::offsets,
  file_level_metadata_service_2fservice_5fenum_2eproto, 0, file_level_enum_descriptors_service_2fservice_5fenum_2eproto, file_level_service_descriptors_service_2fservice_5fenum_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_service_2fservice_5fenum_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_service_2fservice_5fenum_2eproto)), true);
namespace ENUM {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* EServiceType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_service_2fservice_5fenum_2eproto);
  return file_level_enum_descriptors_service_2fservice_5fenum_2eproto[0];
}
bool EServiceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 240:
    case 241:
    case 242:
    case 243:
    case 480:
    case 501:
    case 502:
    case 1024:
      return true;
    default:
      return false;
  }
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace ENUM
PROTOBUF_NAMESPACE_OPEN
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
