// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: service/c2g_user.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_service_2fc2g_5fuser_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_service_2fc2g_5fuser_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3014000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3014000 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
#include "service/service_include.pb.h"
#include "service.h"
#include <memory>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_service_2fc2g_5fuser_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_service_2fc2g_5fuser_2eproto {
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::AuxiliaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::ParseTable schema[2]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::PROTOBUF_NAMESPACE_ID::internal::FieldMetadata field_metadata[];
  static const ::PROTOBUF_NAMESPACE_ID::internal::SerializationTable serialization_table[];
  static const ::PROTOBUF_NAMESPACE_ID::uint32 offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_service_2fc2g_5fuser_2eproto;
namespace CMD {
class C2G_UserLoginArg;
class C2G_UserLoginArgDefaultTypeInternal;
extern C2G_UserLoginArgDefaultTypeInternal _C2G_UserLoginArg_default_instance_;
class C2G_UserLoginRes;
class C2G_UserLoginResDefaultTypeInternal;
extern C2G_UserLoginResDefaultTypeInternal _C2G_UserLoginRes_default_instance_;
}  // namespace CMD
PROTOBUF_NAMESPACE_OPEN
template<> ::CMD::C2G_UserLoginArg* Arena::CreateMaybeMessage<::CMD::C2G_UserLoginArg>(Arena*);
template<> ::CMD::C2G_UserLoginRes* Arena::CreateMaybeMessage<::CMD::C2G_UserLoginRes>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace CMD {

// ===================================================================

class C2G_UserLoginArg PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD.C2G_UserLoginArg) */ {
 public:
  inline C2G_UserLoginArg() : C2G_UserLoginArg(nullptr) {}
  virtual ~C2G_UserLoginArg();

  C2G_UserLoginArg(const C2G_UserLoginArg& from);
  C2G_UserLoginArg(C2G_UserLoginArg&& from) noexcept
    : C2G_UserLoginArg() {
    *this = ::std::move(from);
  }

  inline C2G_UserLoginArg& operator=(const C2G_UserLoginArg& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2G_UserLoginArg& operator=(C2G_UserLoginArg&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C2G_UserLoginArg& default_instance();

  static inline const C2G_UserLoginArg* internal_default_instance() {
    return reinterpret_cast<const C2G_UserLoginArg*>(
               &_C2G_UserLoginArg_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(C2G_UserLoginArg& a, C2G_UserLoginArg& b) {
    a.Swap(&b);
  }
  inline void Swap(C2G_UserLoginArg* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2G_UserLoginArg* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C2G_UserLoginArg* New() const final {
    return CreateMaybeMessage<C2G_UserLoginArg>(nullptr);
  }

  C2G_UserLoginArg* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C2G_UserLoginArg>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C2G_UserLoginArg& from);
  void MergeFrom(const C2G_UserLoginArg& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C2G_UserLoginArg* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD.C2G_UserLoginArg";
  }
  protected:
  explicit C2G_UserLoginArg(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_service_2fc2g_5fuser_2eproto);
    return ::descriptor_table_service_2fc2g_5fuser_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAccidFieldNumber = 1,
  };
  // uint64 accid = 1;
  void clear_accid();
  ::PROTOBUF_NAMESPACE_ID::uint64 accid() const;
  void set_accid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  private:
  ::PROTOBUF_NAMESPACE_ID::uint64 _internal_accid() const;
  void _internal_set_accid(::PROTOBUF_NAMESPACE_ID::uint64 value);
  public:

  // @@protoc_insertion_point(class_scope:CMD.C2G_UserLoginArg)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  ::PROTOBUF_NAMESPACE_ID::uint64 accid_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_service_2fc2g_5fuser_2eproto;
};
// -------------------------------------------------------------------

class C2G_UserLoginRes PROTOBUF_FINAL :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:CMD.C2G_UserLoginRes) */ {
 public:
  inline C2G_UserLoginRes() : C2G_UserLoginRes(nullptr) {}
  virtual ~C2G_UserLoginRes();

  C2G_UserLoginRes(const C2G_UserLoginRes& from);
  C2G_UserLoginRes(C2G_UserLoginRes&& from) noexcept
    : C2G_UserLoginRes() {
    *this = ::std::move(from);
  }

  inline C2G_UserLoginRes& operator=(const C2G_UserLoginRes& from) {
    CopyFrom(from);
    return *this;
  }
  inline C2G_UserLoginRes& operator=(C2G_UserLoginRes&& from) noexcept {
    if (GetArena() == from.GetArena()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return GetMetadataStatic().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return GetMetadataStatic().reflection;
  }
  static const C2G_UserLoginRes& default_instance();

  static inline const C2G_UserLoginRes* internal_default_instance() {
    return reinterpret_cast<const C2G_UserLoginRes*>(
               &_C2G_UserLoginRes_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  friend void swap(C2G_UserLoginRes& a, C2G_UserLoginRes& b) {
    a.Swap(&b);
  }
  inline void Swap(C2G_UserLoginRes* other) {
    if (other == this) return;
    if (GetArena() == other->GetArena()) {
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(C2G_UserLoginRes* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  inline C2G_UserLoginRes* New() const final {
    return CreateMaybeMessage<C2G_UserLoginRes>(nullptr);
  }

  C2G_UserLoginRes* New(::PROTOBUF_NAMESPACE_ID::Arena* arena) const final {
    return CreateMaybeMessage<C2G_UserLoginRes>(arena);
  }
  void CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) final;
  void CopyFrom(const C2G_UserLoginRes& from);
  void MergeFrom(const C2G_UserLoginRes& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  ::PROTOBUF_NAMESPACE_ID::uint8* _InternalSerialize(
      ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  inline void SharedCtor();
  inline void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(C2G_UserLoginRes* other);
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "CMD.C2G_UserLoginRes";
  }
  protected:
  explicit C2G_UserLoginRes(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  private:
  static void ArenaDtor(void* object);
  inline void RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena* arena);
  public:

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;
  private:
  static ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadataStatic() {
    ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&::descriptor_table_service_2fc2g_5fuser_2eproto);
    return ::descriptor_table_service_2fc2g_5fuser_2eproto.file_level_metadata[kIndexInFileMessages];
  }

  public:

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kAllowLoginFieldNumber = 1,
  };
  // bool allow_login = 1;
  void clear_allow_login();
  bool allow_login() const;
  void set_allow_login(bool value);
  private:
  bool _internal_allow_login() const;
  void _internal_set_allow_login(bool value);
  public:

  // @@protoc_insertion_point(class_scope:CMD.C2G_UserLoginRes)
 private:
  class _Internal;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  bool allow_login_;
  mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_service_2fc2g_5fuser_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// C2G_UserLoginArg

// uint64 accid = 1;
inline void C2G_UserLoginArg::clear_accid() {
  accid_ = PROTOBUF_ULONGLONG(0);
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C2G_UserLoginArg::_internal_accid() const {
  return accid_;
}
inline ::PROTOBUF_NAMESPACE_ID::uint64 C2G_UserLoginArg::accid() const {
  // @@protoc_insertion_point(field_get:CMD.C2G_UserLoginArg.accid)
  return _internal_accid();
}
inline void C2G_UserLoginArg::_internal_set_accid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  
  accid_ = value;
}
inline void C2G_UserLoginArg::set_accid(::PROTOBUF_NAMESPACE_ID::uint64 value) {
  _internal_set_accid(value);
  // @@protoc_insertion_point(field_set:CMD.C2G_UserLoginArg.accid)
}

// -------------------------------------------------------------------

// C2G_UserLoginRes

// bool allow_login = 1;
inline void C2G_UserLoginRes::clear_allow_login() {
  allow_login_ = false;
}
inline bool C2G_UserLoginRes::_internal_allow_login() const {
  return allow_login_;
}
inline bool C2G_UserLoginRes::allow_login() const {
  // @@protoc_insertion_point(field_get:CMD.C2G_UserLoginRes.allow_login)
  return _internal_allow_login();
}
inline void C2G_UserLoginRes::_internal_set_allow_login(bool value) {
  
  allow_login_ = value;
}
inline void C2G_UserLoginRes::set_allow_login(bool value) {
  _internal_set_allow_login(value);
  // @@protoc_insertion_point(field_set:CMD.C2G_UserLoginRes.allow_login)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------



// ===================================================================

typedef     ::std::shared_ptr<C2G_UserLoginArg>     C2G_UserLoginArgPtr;
typedef     ::std::shared_ptr<C2G_UserLoginRes>     C2G_UserLoginResPtr;

// -------------------------------------------------------------------

class C2G_UserLoginService_Stub;

class C2G_UserLoginService : public ::muduo::net::Service {
 protected:
  // This class should be treated as an abstract interface.
  inline C2G_UserLoginService() {};
 public:
  virtual ~C2G_UserLoginService();

  typedef C2G_UserLoginService_Stub Stub;

  static const ::google::protobuf::ServiceDescriptor* descriptor();

  virtual void C2G_UserLogin(const ::CMD::C2G_UserLoginArgPtr& request,
                       const ::CMD::C2G_UserLoginResPtr& response);
  virtual void C2G_UserLogin_DoneCb(const ::CMD::C2G_UserLoginArgPtr& request,
                              const ::CMD::C2G_UserLoginResPtr& response) {} 
  virtual void C2G_UserLogin_TimeOut(const ::CMD::C2G_UserLoginArgPtr& request) {} 


  // implements Service ----------------------------------------------

  const ::google::protobuf::ServiceDescriptor* GetDescriptor();
  const ::google::protobuf::Message& GetRequestPrototype(
                             const ::google::protobuf::MethodDescriptor* method) const;
  const ::google::protobuf::Message& GetResponsePrototype(
                             const ::google::protobuf::MethodDescriptor* method) const;

  void CallMethod(const ::google::protobuf::MethodDescriptor* method,
                  const ::google::protobuf::MessagePtr& request,
                  const ::google::protobuf::MessagePtr& response);

  void DoneCallback(const ::google::protobuf::MethodDescriptor* method,
                    const ::google::protobuf::MessagePtr& request,
                    const ::google::protobuf::MessagePtr& response);

  void TimeOut(const ::google::protobuf::MethodDescriptor* method,
               const ::google::protobuf::MessagePtr& request);

 private:
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(C2G_UserLoginService);
};

class C2G_UserLoginService_Stub : public C2G_UserLoginService {
 public:
  C2G_UserLoginService_Stub() {} 
  C2G_UserLoginService_Stub(::muduo::net::RpcChannelBase* channel);
  ~C2G_UserLoginService_Stub();

  inline ::muduo::net::RpcChannelBase* channel() { return channel_; }

  // implements C2G_UserLoginService ------------------------------------------

  virtual void C2G_UserLogin(const ::CMD::C2G_UserLoginArgPtr& request,
                       const ::CMD::C2G_UserLoginResPtr& response);

 private:
  muduo::net::RpcChannelBase* channel_;
  bool owns_channel_;
  GOOGLE_DISALLOW_EVIL_CONSTRUCTORS(C2G_UserLoginService_Stub);
};

// @@protoc_insertion_point(namespace_scope)

}  // namespace CMD

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_service_2fc2g_5fuser_2eproto
